//David Robertson
//dmr73

public class wordSearchGame
{
  public static void main(String[] args)
  {
    //set default values
    int cols=6;
    String dict="dict10.txt";
    String board=null;
    int nVal;
    StdOut.println("Welcome to WORD SEARCH! Run with \"-help\" for cmd-line options.");
    
    //look through input for settings
    for(int k=0; k<args.length; k++)
    {
      //StdOut.println(args[k]);
      //Check for help request
      //If requested, print help options
      if(args[k].equals("-help"))
      {
        StdOut.println("Options:");
        StdOut.println("\"-board FILENAME\": Specifies game board file.");
        StdOut.println("\"-dict FILENAME\": Specifies dictionary file.");
        StdOut.println("\"-cols NUMCOLS\": Specifies the number of columns for printing words.");
      }
      
      //check for board setting
      if(args[k].equals("-board"))
      {
        k++;
        //set board
        board=args[k];
      }
      
      //check for dictionary setting
      if(args[k].equals("-dict"))
      {
        k++;
        //set dictionary
        dict=args[k];
      }
      //check for cols setting
      if(args[k].equals("-cols"))
      {
        k++;
        //set cols variable
        cols=Integer.parseInt(args[k]);
      }
           
    }
    //Check if board was entered; result FALSE
    if(board==null)
    {
      //ask user for board
      StdOut.println("Please enter a board: ");
      board= StdIn.readLine();
    }
    
////////////////////////////////////////////////////////////////////////////    

//Read dictionary from disk to bag
    In dictFile=new In(dict);
    //set stopwatch
    Stopwatch dClock = new Stopwatch();
    //add all dictionary items to dBag
    Bag<String> dBag = new Bag<String>();
    while(!dictFile.isEmpty())
    {
      dBag.add(dictFile.readString());
    }
    //Stop stopwatch; print result
    StdOut.println("Reading dictionary ("+dBag.size()+" words) from disk: " + dClock.elapsedTime() +" seconds.");
    
    
//Read dictionary from Bag to TST
    TST<String> dTST= new TST<String>();
    //Set stopwatch
    Stopwatch dTClock= new Stopwatch();
    //put objects in TST
    int val=0;
    String counter=""+val;
    for(String s : dBag)
    {
    
      //StdOut.println(dTST.get(s));///////////////////////////////////////////////////////
      dTST.put(s,counter);
      //StdOut.println(dTST.contains(s));
      val++;
      counter=""+val;
    }
    
    //Print results with time
    StdOut.println("Putting dictionary into ternary-search-trie: "+dTClock.elapsedTime() +" seconds.");

    StdOut.println("\nGame Board:");
//open board text file
    In boardFile= new In(board);
    //set n value
    nVal= boardFile.readInt();
    boardFile.readLine();
    //create 2d array for game board
    String[][] bArray = new String[nVal][nVal];
    int tempR=0;
// while there are lines left in file
    String tLine;
    String[] temp=new String[nVal];
    while(boardFile.hasNextLine())
    {
      //temp string of characters
      tLine= boardFile.readLine();
      StdOut.println(tLine);
      temp= tLine.split(" ");
      //store temp string into 2d array
      for(int t=0;t<nVal; t++)
      {
        bArray[tempR][t]=temp[t];
      }
      tempR++;
      //print line
     
    }
    
    tempR=0;
/*
    String s;
    while(tempR<nVal)
    {
      for(int t=0; t<nVal; t++)
      {
        s=bArray[tempR][t];
        StdOut.println(s);
      }
      
      tempR++;
    }
 *///2d array testing
    
    //create a TST for game words
    TST<String> game= new TST<String>();
    
    
    //set timer
    Stopwatch searchClock= new Stopwatch();
    //used for searching words
    String wSearch=null;
    
    
    
//Implements wildcard search  
    val=0;
    //find all matches
    Iterable<String> test= dTST.wildcardMatch(wSearch);
    for(String s : test)
    {
      counter=""+val;
      if(!game.contains(s))
      {
        game.put(s,counter);
      }
      val++;
      //StdOut.println(s);
    }
    
//String s contians all matches including wildcard results
  }//end main
}//end program